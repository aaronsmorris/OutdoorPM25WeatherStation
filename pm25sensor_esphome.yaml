esphome:
  name: pm25sensor

esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: INSERT_YOURS_HERE

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pm25Sensor Fallback Hotspot"
    password: INSERT_YOURS_HERE
captive_portal:

uart:
  tx_pin: D6
  rx_pin: D7
  baud_rate: 9600

dallas:
  - pin: D5
sensor:
  - platform: pmsx003
    type: PMSX003
    pm_2_5:
      id: pm_2_5
      name: "pm2.5"
      unit_of_measurement: "µg/m³"
      icon: "mdi:face-mask-outline"
      state_class: "measurement"
      filters:
        - sliding_window_moving_average:
            window_size: 60
            send_every: 60
      on_value:
        lambda: |-
          // https://en.wikipedia.org/wiki/Air_quality_index#Computing_the_AQI
          if (id(pm_2_5).state < 12.0) {
            // good
            id(pm_2_5_aqi).publish_state((50.0 - 0.0) / (12.0 - 0.0) * (id(pm_2_5).state - 0.0) + 0.0);
          } else if (id(pm_2_5).state < 35.4) {
            // moderate
            id(pm_2_5_aqi).publish_state((100.0 - 51.0) / (35.4 - 12.1) * (id(pm_2_5).state - 12.1) + 51.0);
          } else if (id(pm_2_5).state < 55.4) {
            // usg
            id(pm_2_5_aqi).publish_state((150.0 - 101.0) / (55.4 - 35.5) * (id(pm_2_5).state - 35.5) + 101.0);
          } else if (id(pm_2_5).state < 150.4) {
            // unhealthy
            id(pm_2_5_aqi).publish_state((200.0 - 151.0) / (150.4 - 55.5) * (id(pm_2_5).state - 55.5) + 151.0);
          } else if (id(pm_2_5).state < 250.4) {
            // very unhealthy
            id(pm_2_5_aqi).publish_state((300.0 - 201.0) / (250.4 - 150.5) * (id(pm_2_5).state - 150.5) + 201.0);
          } else if (id(pm_2_5).state < 350.4) {
            // hazardous
            id(pm_2_5_aqi).publish_state((400.0 - 301.0) / (350.4 - 250.5) * (id(pm_2_5).state - 250.5) + 301.0);
          } else if (id(pm_2_5).state < 500.4) {
            // hazardous 2
            id(pm_2_5_aqi).publish_state((500.0 - 401.0) / (500.4 - 350.5) * (id(pm_2_5).state - 350.5) + 401.0);
          }
    pm_10_0:
      name: "pm10"
      unit_of_measurement: "µg/m³"
      icon: "mdi:face-mask-outline"
      state_class: "measurement"
      filters:
        - sliding_window_moving_average:
            window_size: 60
            send_every: 60

  - platform: template
    name: "pm25sensor PM <2.5 AQI"
    unit_of_measurement: "AQI"
    icon: "mdi:air-filter"
    accuracy_decimals: 0
    id: pm_2_5_aqi

  - platform: dallas
    name: "Outdoor Temperature"
    address: "0xba3cf9f64939a928"

switch:
  - platform: gpio
    pin: 
      number: D3
    id: pms_set
    name: "Start Measuring PM25"
  
interval:
  - interval: 120s
    then:
      - switch.turn_on: pms_set
      - delay: 20s
      - switch.turn_off: pms_set